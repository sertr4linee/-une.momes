generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id             String   @id
  hashedPassword String
  totpSecret     String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Album {
  id          String   @id @default(cuid())
  title       String
  description String?
  category    String
  coverImage  String?
  images      Image[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Image {
  id        String   @id @default(cuid())
  url       String
  caption   String?
  albumId   String
  album     Album    @relation(fields: [albumId], references: [id])
  order     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model About {
  id         String   @id @default("about")
  myApproach String
  degree     String
  school     String
  years      String
  skills     String[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Blog {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  excerpt     String
  content     String
  category    String
  coverImage  String?
  status      String   @default("draft")
  featured    Boolean  @default(false)
  tags        String[]
  publishDate DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SchoolProject {
  id          String   @id @default(cuid())
  title       String
  description String
  year        String
  category    String
  tags        String[]
  image       String?
  objectives  String[]
  skills      String[]
  color       String
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  images      ProjectImage[]
  slug        String   @unique @default(cuid())

  @@map("school_projects")
}

model ProjectImage {
  id          String        @id @default(cuid())
  url         String
  caption     String?
  projectId   String
  project     SchoolProject @relation(fields: [projectId], references: [id], onDelete: Cascade)
  order       Int           @default(0)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@map("project_images")
} 